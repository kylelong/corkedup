{"ast":null,"code":"var _jsxFileName = \"/Users/kylelong/corkedup/client/src/components/Account.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport '../styles/Account.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Navigation from './Navigation';\nimport SideMenu from './SideMenu';\nimport { useHistory } from \"react-router-dom\";\nimport gql from 'graphql-tag';\nimport { useMutation } from \"@apollo/client\";\nimport { useForm } from '../util/hooks';\nimport { AuthContext } from '../context/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  }\n}));\n\nconst Account = () => {\n  _s();\n\n  const {\n    user\n  } = useContext(AuthContext);\n  const classes = useStyles();\n  const email = user.email;\n  const history = useHistory();\n  const [errors, setErrors] = useState({});\n  const joinDate = new Date(user.createdAt).toDateString();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accountContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"header\",\n        children: \"Account Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Member since: \", joinDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        noValidate: true,\n        autoComplete: \"off\",\n        id: \"loginForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"zipcode\",\n          children: \"Zipcode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: zipcode,\n          variant: \"outlined\",\n          name: \"zipcode\",\n          id: \"zipcode\",\n          placeholder: zipcode,\n          inputProps: {\n            maxLength: 5\n          },\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), errors.zipcode.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error\",\n          children: errors.zipcode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button is-info is-light is-medium is-fullwidth\",\n            onClick: updateZipcode,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), zipCodeSave && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"green\"\n          },\n          children: \"Zip Code successfully saved.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Account, \"4CPP2FSDZwsFaccJ73DjmpjbV8M=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = Account;\nconst UPDATE_ZIPCODE = gql`\n\nmutation updateZipcode(\n $email: String!\n $zipCode: String!\n) {\n    update_zipcode(\n            updateZipcode: {\n                email: $email,\n                zipCode: $zipCode\n            }\n        ){\n            id email token firstName lastName zipCode createdAt\n        }\n}\n`;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/Users/kylelong/corkedup/client/src/components/Account.js"],"names":["React","useState","useContext","makeStyles","TextField","Navigation","SideMenu","useHistory","gql","useMutation","useForm","AuthContext","useStyles","theme","root","margin","spacing","width","Account","user","classes","email","history","errors","setErrors","joinDate","Date","createdAt","toDateString","zipcode","maxLength","onChange","length","updateZipcode","zipCodeSave","color","UPDATE_ZIPCODE"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport '../styles/Account.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Navigation from './Navigation';\nimport SideMenu from './SideMenu';\nimport { useHistory } from \"react-router-dom\";\n\nimport gql from 'graphql-tag';\nimport { useMutation } from \"@apollo/client\";\nimport { useForm } from '../util/hooks'\nimport { AuthContext } from '../context/auth';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        width: '25ch',\n      },\n    },\n  }));\nconst Account = () => {\n    const { user } = useContext(AuthContext);\n    const classes = useStyles();\n    const email = user.email;\n    const history = useHistory();\n    const [errors, setErrors] = useState({});\n    const joinDate = new Date(user.createdAt).toDateString();\n\n\n    return (\n        <div>\n             <div className=\"accountContainer\">\n             <Navigation />\n                    <SideMenu />\n                 <h3 className=\"header\">Account Information</h3>\n                 <p>Email: {email}</p>\n                 <p>Member since: {joinDate}</p>\n                 <form className={classes.root} noValidate autoComplete=\"off\" id=\"loginForm\">\n                 <label htmlFor=\"zipcode\">Zipcode</label>\n                    <TextField id=\"outlined-basic\" label={zipcode} variant=\"outlined\" name=\"zipcode\" id=\"zipcode\" placeholder={zipcode}  inputProps={{ maxLength:5 }} onChange={onChange} />\n                    {(errors.zipcode.length > 0) &&\n                       <p className=\"error\">{errors.zipcode}</p>\n                    }\n                    <div className=\"buttons\">\n                        <button className=\"button is-info is-light is-medium is-fullwidth\" onClick={updateZipcode}>Update</button>\n                    </div>\n                    {zipCodeSave &&\n                        <span style={{color: \"green\"}}>Zip Code successfully saved.</span>\n                    }\n            \n                </form>\n               \n             </div>\n        </div>\n    );\n};\n\nconst UPDATE_ZIPCODE = gql`\n\nmutation updateZipcode(\n $email: String!\n $zipCode: String!\n) {\n    update_zipcode(\n            updateZipcode: {\n                email: $email,\n                zipCode: $zipCode\n            }\n        ){\n            id email token firstName lastName zipCode createdAt\n        }\n}\n`;\n\nexport default Account;"]},"metadata":{},"sourceType":"module"}