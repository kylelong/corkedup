{"ast":null,"code":"var _jsxFileName = \"/Users/kylelong/corkedup/src/components/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Logo from './Logo';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  }\n}));\n\nfunction SignUp(props) {\n  _s();\n\n  const classes = useStyles();\n  const [errors, setErrors] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  useEffect(() => {\n    console.log(\"Errors: \", errors);\n  }, [errors]);\n\n  const onChange = e => {\n    const {\n      name\n    } = e.target;\n    name === \"email\" ? setEmail(e.target.value) : setPassword(e.target.value);\n  }; //Email validation\n\n\n  const validEmail = email => {\n    const regEx = /^([0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})$/;\n\n    if (!email.match(regEx) || email.length === 0) {\n      //setErrors(prevErrors => [...prevErrors, \"Email must be valid.\"]);\n      // const emailObj = {};\n      // emailObj[\"email\"] = \"Email must be valid.\"\n      setErrors({ ...errors,\n        email: \"Email must be valid\"\n      });\n    }\n\n    return regEx.test(email);\n  }; //Password validation\n\n\n  const minPasswordLength = password => {\n    return password.length >= 8;\n  };\n\n  const maxPasswordLength = password => {\n    return password.length < 55;\n  };\n\n  const validPassword = password => {\n    if (!minPasswordLength(password)) {\n      //setErrors(prevErrors => [...prevErrors, \"Password must be at least 8 characters.\"]);\n      setErrors(prevErrors => ({ ...prevErrors,\n        password: \"Password must be at least 8 characters.\"\n      }));\n    }\n\n    if (!maxPasswordLength(password)) {\n      setErrors(prevErrors => ({ ...prevErrors,\n        password: \"Password must be at less than 55 characters.\"\n      })); // setErrors(prevErrors => [...prevErrors, \"Password must be at less than 55 characters.\"]);\n    }\n\n    return minPasswordLength(password) && maxPasswordLength(password);\n  };\n\n  const clickedButton = e => {\n    e.preventDefault();\n    setErrors({\n      email: \"\",\n      password: \"\"\n    });\n    console.log(email, \" \", password);\n    console.log(validEmail(email));\n    console.log(validPassword(password));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Welcome to Corked Up. Create your account.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        noValidate: true,\n        autoComplete: \"off\",\n        id: \"signupForm\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Email\",\n          variant: \"outlined\",\n          name: \"email\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Password\",\n          variant: \"outlined\",\n          name: \"password\",\n          type: \"password\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button is-info is-light is-medium is-fullwidth\",\n            onClick: clickedButton,\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Already an account? Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignUp, \"9E2F2mY8daGvM7fp77Ze9/qX8Kc=\", false, function () {\n  return [useStyles];\n});\n\n_c = SignUp;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/kylelong/corkedup/src/components/SignUp.js"],"names":["React","useEffect","useState","Logo","makeStyles","TextField","Link","useStyles","theme","root","margin","spacing","width","SignUp","props","classes","errors","setErrors","email","password","setEmail","setPassword","console","log","onChange","e","name","target","value","validEmail","regEx","match","length","test","minPasswordLength","maxPasswordLength","validPassword","prevErrors","clickedButton","preventDefault"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Logo from './Logo';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Link } from \"react-router-dom\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nfunction SignUp(props) {\n    \n    const classes = useStyles();\n    const [errors, setErrors] = useState({email: \"\", password: \"\"});\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    useEffect( () => {\n        console.log(\"Errors: \", errors);\n    }, [errors])\n\n    const onChange = (e) => {\n        const { name } = e.target;\n        name === \"email\" ? setEmail(e.target.value) : setPassword(e.target.value);\n    }\n\n    //Email validation\n    const validEmail = (email) => {\n        const regEx = /^([0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})$/;\n        if(!email.match(regEx) || email.length === 0){\n            //setErrors(prevErrors => [...prevErrors, \"Email must be valid.\"]);\n            // const emailObj = {};\n            // emailObj[\"email\"] = \"Email must be valid.\"\n            setErrors({...errors, email: \"Email must be valid\"});\n        }\n        return regEx.test(email);\n    }\n    //Password validation\n    const minPasswordLength = (password) => {\n        return password.length >= 8;\n    }\n    const maxPasswordLength = (password) => {\n        return password.length < 55;\n    }\n    const validPassword = (password) => {\n        if(!minPasswordLength(password)){\n            //setErrors(prevErrors => [...prevErrors, \"Password must be at least 8 characters.\"]);\n            setErrors(prevErrors => ({ ...prevErrors, password : \"Password must be at least 8 characters.\" }));\n        }\n        if(!maxPasswordLength(password)){\n            setErrors(prevErrors => ({ ...prevErrors, password : \"Password must be at less than 55 characters.\" }));\n            // setErrors(prevErrors => [...prevErrors, \"Password must be at less than 55 characters.\"]);\n        }\n        return (minPasswordLength(password) && maxPasswordLength(password));\n    }\n\n    const clickedButton = (e) => {\n        e.preventDefault();\n        setErrors({email: \"\", password: \"\"});\n        console.log(email, \" \", password);\n        console.log(validEmail(email));\n        console.log(validPassword(password));\n    }\n    return (\n        <div className=\"main\">\n            <div className=\"container\">\n                <Logo />\n                <h3>Welcome to Corked Up. Create your account.</h3>\n                <form className={classes.root} noValidate autoComplete=\"off\" id=\"signupForm\">\n                    <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" name=\"email\" onChange={onChange} />\n                    <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" name=\"password\" type=\"password\" onChange={onChange} />\n                    <div className=\"buttons\">\n                        <button className=\"button is-info is-light is-medium is-fullwidth\"  onClick={clickedButton}>Continue</button>\n                    \n                    <Link to=\"/\">Already an account? Sign in</Link>\n                    </div>\n                </form>\n            </div>\n        </div>\n\n    );\n}\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}