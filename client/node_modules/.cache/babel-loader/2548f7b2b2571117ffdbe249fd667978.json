{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/kylelong/corkedup/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"/Users/kylelong/corkedup/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";var _templateObject;import React,{useState,useContext}from'react';import{makeStyles}from'@material-ui/core/styles';import TextField from'@material-ui/core/TextField';import{Link,useHistory}from\"react-router-dom\";import gql from'graphql-tag';import{useMutation}from\"@apollo/client\";import{AuthContext}from'../../context/auth';import{useForm}from'../../util/hooks';/*\nTODO: Login for email and password.\n Make sure it matches from db before redirecting to profile\n*/import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{root:{'& > *':{margin:theme.spacing(1),width:'25ch'}}};});export default function LoginForm(props){var context=useContext(AuthContext);var classes=useStyles();var _useState=useState({}),_useState2=_slicedToArray(_useState,2),errors=_useState2[0],setErrors=_useState2[1];var history=useHistory();var _useForm=useForm(loginUserCallback,{email:'',password:''}),onChange=_useForm.onChange,onSubmit=_useForm.onSubmit,values=_useForm.values;var _useMutation=useMutation(LOGIN_USER,{update:function update(_,_ref){var userData=_ref.data.login;context.login(userData);history.push('/bars');},onError:function onError(_ref2){var graphQLErrors=_ref2.graphQLErrors,networkError=_ref2.networkError;if(graphQLErrors){setErrors(graphQLErrors[0].extensions.errors);}if(networkError){console.log(networkError);}},variables:values}),_useMutation2=_slicedToArray(_useMutation,2),loginUser=_useMutation2[0],loading=_useMutation2[1].loading;function loginUserCallback(){loginUser();}return/*#__PURE__*/_jsxs(\"form\",{onSubmit:onSubmit,className:classes.root,noValidate:true,autoComplete:\"off\",id:\"loginForm\",children:[/*#__PURE__*/_jsx(TextField,{id:\"outlined-basic\",label:\"Email\",variant:\"outlined\",name:\"email\",onChange:onChange}),errors.hasOwnProperty(\"email\")&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:errors.email}),/*#__PURE__*/_jsx(TextField,{id:\"outlined-basic\",label:\"Password\",variant:\"outlined\",type:\"password\",name:\"password\",onChange:onChange}),errors.hasOwnProperty(\"password\")&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:errors.password}),/*#__PURE__*/_jsx(\"div\",{className:\"buttons\",children:/*#__PURE__*/_jsx(\"button\",{className:\"button is-info is-light is-medium is-fullwidth\",type:\"submit\",children:\"Login\"})}),errors.hasOwnProperty(\"general\")&&/*#__PURE__*/_jsx(\"span\",{className:\"error\",children:errors.general}),/*#__PURE__*/_jsx(Link,{to:\"/signup\",children:\"Don't have an account? Sign up\"})]});}var LOGIN_USER=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  mutation login($email: String!,$password: String!) {\\n    login (\\n        email: $email,\\n        password: $password  \\n    ){\\n      id email token firstName lastName zipCode createdAt\\n    }\\n  }\\n\"])));","map":{"version":3,"sources":["/Users/kylelong/corkedup/client/src/components/landing_page/LoginForm.js"],"names":["React","useState","useContext","makeStyles","TextField","Link","useHistory","gql","useMutation","AuthContext","useForm","useStyles","theme","root","margin","spacing","width","LoginForm","props","context","classes","errors","setErrors","history","loginUserCallback","email","password","onChange","onSubmit","values","LOGIN_USER","update","_","userData","data","login","push","onError","graphQLErrors","networkError","extensions","console","log","variables","loginUser","loading","hasOwnProperty","general"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport gql from 'graphql-tag';\nimport { useMutation } from \"@apollo/client\";\nimport { AuthContext } from '../../context/auth';\nimport { useForm } from '../../util/hooks';\n/*\nTODO: Login for email and password.\n Make sure it matches from db before redirecting to profile\n*/\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nexport default function LoginForm(props) {\n  const context = useContext(AuthContext);\n  const classes = useStyles();\n  const [errors, setErrors] = useState({})\n  const history = useHistory();\n\n  const {onChange, onSubmit, values } = useForm(loginUserCallback, {\n    email: '',\n    password: ''\n})\n\n\nconst [loginUser, { loading }] = useMutation(LOGIN_USER, {\n  update(_, \n    { \n      data: {login: userData}}) {\n\n    context.login(userData);\n    history.push('/bars');\n  },\n  onError({ graphQLErrors, networkError }){\n    if(graphQLErrors){\n      setErrors(graphQLErrors[0].extensions.errors);\n    }\n    if(networkError){\n      console.log(networkError);\n    }\n\n  },\n  variables: values\n});\n\nfunction loginUserCallback() {\n  loginUser();\n}\n\n  return (\n\n    <form onSubmit={onSubmit} className={classes.root} noValidate autoComplete=\"off\" id=\"loginForm\">\n      <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" name=\"email\" onChange={onChange} />\n      {   errors.hasOwnProperty(\"email\") &&\n          <p className=\"error\">{errors.email}</p>\n       }\n      <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" type=\"password\" name=\"password\" onChange={onChange} />\n      {   errors.hasOwnProperty(\"password\") &&\n          <p className=\"error\">{errors.password}</p>\n       }\n\n        <div className=\"buttons\">\n          <button className=\"button is-info is-light is-medium is-fullwidth\" type=\"submit\">Login</button>\n        </div>\n\n        {   errors.hasOwnProperty(\"general\") &&\n          <span className=\"error\">{errors.general}</span>\n       }\n\n        <Link to=\"/signup\">Don't have an account? Sign up</Link>\n\n    </form>\n\n  );\n}\n\nconst LOGIN_USER = gql`\n  mutation login($email: String!,$password: String!) {\n    login (\n        email: $email,\n        password: $password  \n    ){\n      id email token firstName lastName zipCode createdAt\n    }\n  }\n`;"]},"metadata":{},"sourceType":"module"}