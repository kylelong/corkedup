{"ast":null,"code":"var _jsxFileName = \"/Users/kylelong/corkedup/client/src/components/SignUp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Logo from './Logo';\nimport '../styles/Signup.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Link } from \"react-router-dom\";\nimport gql from 'graphql-tag';\nimport { useMutation } from \"@apollo/client\"; //TODO: check if already logged in before visiting this page\n//make sure user exists in db before redirectin to home\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  }\n}));\nconst label = {\n  inputProps: {\n    'aria-label': 'Show'\n  }\n};\n\nfunction SignUp(props) {\n  _s();\n\n  const classes = useStyles();\n  const [errors, setErrors] = useState({});\n  const [values, setValues] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: ''\n  });\n  const [addUser, {\n    loading\n  }] = useMutation(REGISTER_USER, {\n    update(proxy, result) {\n      console.log(result);\n    },\n\n    onError(err) {\n      console.log(err.graphQLErrors[0].extensions.exception.errors);\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n\n    variables: values\n  });\n  const [showPassword, setShowPassword] = useState(false);\n\n  const onChange = e => {\n    setValues({ ...values,\n      [e.target.name]: e.target.value\n    }); // const { name } = e.target;\n    // name === \"email\" ? setEmail(e.target.value) : setPassword(e.target.value);\n\n    validEmail(values.email);\n    validPassword(values.password);\n  };\n\n  const clickedShowPassword = () => {\n    setShowPassword(showPassword => !showPassword);\n  }; //Email validation\n\n\n  const validEmail = email => {\n    const regEx = /^([0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})$/;\n\n    if (!email.match(regEx)) {\n      setErrors(prevErrors => ({ ...prevErrors,\n        email: \"Email must be valid.\"\n      }));\n    } else {\n      setErrors(prevErrors => ({ ...prevErrors,\n        email: \"\"\n      }));\n    }\n\n    return regEx.test(email);\n  }; //Password validation\n\n\n  const minPasswordLength = password => {\n    return password.length < 7;\n  };\n\n  const maxPasswordLength = password => {\n    return password.length < 55;\n  };\n\n  const validPassword = password => {\n    if (minPasswordLength(password)) {\n      setErrors(prevErrors => ({ ...prevErrors,\n        password: \"Password must be at least 8 characters.\"\n      }));\n    } else if (!maxPasswordLength(password)) {\n      setErrors(prevErrors => ({ ...prevErrors,\n        password: \"Password must be at less than 55 characters.\"\n      }));\n    } else {\n      setErrors(prevErrors => ({ ...prevErrors,\n        password: \"\"\n      }));\n    }\n\n    return !minPasswordLength(password) && maxPasswordLength(password);\n  }; //Clicked \"Continue\"\n\n\n  const clickedButton = e => {\n    if (validEmail(values.email)) {\n      setErrors(prevErrors => ({ ...prevErrors,\n        email: \"\"\n      }));\n    }\n\n    if (validPassword(values.password)) {\n      setErrors(prevErrors => ({ ...prevErrors,\n        password: \"\"\n      }));\n    }\n\n    if (!validEmail(values.email) || !validPassword(values.password)) {\n      e.preventDefault();\n    }\n\n    if (validEmail(values.email) && validPassword(values.password)) {\n      addUser();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Welcome to Corked Up. Create your account.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        noValidate: true,\n        autoComplete: \"off\",\n        id: \"signupForm\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"First Name\",\n          variant: \"outlined\",\n          name: \"firstName\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Last Name\",\n          variant: \"outlined\",\n          name: \"lastName\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Email\",\n          variant: \"outlined\",\n          name: \"email\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"Password\",\n          variant: \"outlined\",\n          name: \"password\",\n          type: showPassword ? \"text\" : \"password\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            onClick: clickedShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this), \" Show password\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button is-info is-light is-medium is-fullwidth\",\n            onClick: clickedButton,\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Already an account? Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), Object.keys(errors).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui error message\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.values(errors).map(value => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: value\n          }, value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignUp, \"H5tQFiHfheq9E/54oMrJINDmUio=\", false, function () {\n  return [useStyles, useMutation];\n});\n\n_c = SignUp;\nconst REGISTER_USER = gql`\n mutation register(\n     $email: String!\n     $firstName: String!\n     $lastName: String!\n     $password: String!\n ) {\n     register(\n         registerInput: {\n             firstName: $firstName\n             lastName: $lastName\n             password: $password\n             email: $email\n         }\n     ){\n         id email token firstName lastName createdAt\n     }\n }\n`;\nexport default SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/kylelong/corkedup/client/src/components/SignUp.js"],"names":["React","useEffect","useState","Logo","makeStyles","TextField","Checkbox","Link","gql","useMutation","useStyles","theme","root","margin","spacing","width","label","inputProps","SignUp","props","classes","errors","setErrors","values","setValues","firstName","lastName","email","password","addUser","loading","REGISTER_USER","update","proxy","result","console","log","onError","err","graphQLErrors","extensions","exception","variables","showPassword","setShowPassword","onChange","e","target","name","value","validEmail","validPassword","clickedShowPassword","regEx","match","prevErrors","test","minPasswordLength","length","maxPasswordLength","clickedButton","preventDefault","Object","keys","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Logo from './Logo';\nimport '../styles/Signup.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { Link } from \"react-router-dom\";\nimport gql from 'graphql-tag';\nimport { useMutation } from \"@apollo/client\";\n//TODO: check if already logged in before visiting this page\n//make sure user exists in db before redirectin to home\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\nconst label = { inputProps: { 'aria-label': 'Show' } }\n\nfunction SignUp(props) {\n    \n    const classes = useStyles();\n   \n    const [errors, setErrors] = useState({});\n    const [values, setValues] = useState({\n        firstName: '',\n        lastName: '',\n        email: '',\n        password: ''\n    })\n\n    const [addUser, { loading }] = useMutation(REGISTER_USER, {\n        update(proxy, result){\n            console.log(result);\n        },\n        onError(err){\n            console.log(err.graphQLErrors[0].extensions.exception.errors)\n            setErrors(err.graphQLErrors[0].extensions.exception.errors);\n        },\n        variables: values\n    });\n\n    const [showPassword, setShowPassword] = useState(false);\n\n    const onChange = (e) => {\n        setValues({...values, [e.target.name]: e.target.value});\n        // const { name } = e.target;\n        // name === \"email\" ? setEmail(e.target.value) : setPassword(e.target.value);\n        validEmail(values.email);\n        validPassword(values.password);\n    }\n\n    const clickedShowPassword = () =>{\n        setShowPassword(showPassword => !showPassword);\n    }\n\n    //Email validation\n    const validEmail = (email) => {\n        const regEx = /^([0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})$/;\n        if(!email.match(regEx)){\n            setErrors(prevErrors => ({ ...prevErrors, email: \"Email must be valid.\" }));\n        } else{\n            setErrors(prevErrors => ({ ...prevErrors, email: \"\" }));\n        }\n        return regEx.test(email);\n    }\n    //Password validation\n    const minPasswordLength = (password) => {\n        return password.length < 7;\n    }\n    const maxPasswordLength = (password) => {\n        return password.length < 55;\n    }\n    const validPassword = (password) => {\n        if(minPasswordLength(password)){\n            setErrors(prevErrors => ({ ...prevErrors, password: \"Password must be at least 8 characters.\" }));\n        }\n        else if(!maxPasswordLength(password)){\n            setErrors(prevErrors => ({ ...prevErrors, password: \"Password must be at less than 55 characters.\" }));\n        } else{\n            setErrors(prevErrors => ({ ...prevErrors, password: \"\" }));\n        }\n        return (!minPasswordLength(password) && maxPasswordLength(password));\n    }\n    //Clicked \"Continue\"\n    const clickedButton = (e) => {\n        if(validEmail(values.email)){\n            setErrors(prevErrors => ({ ...prevErrors, email: \"\" }));\n        }\n        if(validPassword(values.password)){\n            setErrors(prevErrors => ({ ...prevErrors, password: \"\" }));\n        }\n        if(!validEmail(values.email) || !validPassword(values.password)){\n            e.preventDefault();\n        } \n        if(validEmail(values.email) && validPassword(values.password)){\n            addUser();\n        }\n    }\n    return (\n        <div className=\"main\">\n            <div className=\"container\">\n                <Logo />\n                <h3>Welcome to Corked Up. Create your account.</h3>\n                \n                <form className={classes.root} noValidate autoComplete=\"off\" id=\"signupForm\">\n                <TextField id=\"outlined-basic\" label=\"First Name\" variant=\"outlined\" name=\"firstName\" onChange={onChange} />\n                <TextField id=\"outlined-basic\" label=\"Last Name\" variant=\"outlined\" name=\"lastName\" onChange={onChange} />\n                    <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" name=\"email\" onChange={onChange} />\n                    {/* {errors.email.length > 0 &&\n                       <p className=\"error\">{errors.email}</p>\n                    } */}\n                    <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" name=\"password\" type={showPassword ? \"text\" : \"password\"} onChange={onChange} />\n         \n                    {/* {(errors.password.length > 0) &&\n                       <p className=\"error\">{errors.password}</p>\n                    } */}\n                               <span>\n                    <Checkbox onClick={clickedShowPassword}/> Show password\n                    </span>\n                       {/* { (errors.email.length === 0 && errors.password.length === 0) ?\n                            <Link to=\"/bars\">\n                                <div className=\"buttons\">\n                                    <button className=\"button is-info is-light is-medium is-fullwidth\" onClick={clickedButton}>Continue</button> \n                                </div>\n                            </Link>\n                            : */}\n                            <div className=\"buttons\">\n                                <button className=\"button is-info is-light is-medium is-fullwidth\"  onClick={clickedButton}>Continue</button> \n                            </div>\n                       \n                    <Link to=\"/\">Already an account? Sign in</Link>\n                </form>\n                {Object.keys(errors).length > 0 && (\n                  <div className=\"ui error message\">\n                    <ul>\n                        {Object.values(errors).map(value => (\n                            <li key={value}>{value}</li>\n                        ))}\n                    </ul>\n                 </div>\n\n                 )}\n\n            </div>\n        </div>\n\n    );\n}\n\nconst REGISTER_USER = gql`\n mutation register(\n     $email: String!\n     $firstName: String!\n     $lastName: String!\n     $password: String!\n ) {\n     register(\n         registerInput: {\n             firstName: $firstName\n             lastName: $lastName\n             password: $password\n             email: $email\n         }\n     ){\n         id email token firstName lastName createdAt\n     }\n }\n`;\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}