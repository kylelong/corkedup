{"ast":null,"code":"var _jsxFileName = \"/Users/kylelong/corkedup/client/src/context/auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, createContext } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nif (localStorage.getItem(\"jwtToken\")) {\n  const decodedToken = jwtDecode(localStorage.getItem(\"jwtToken\"));\n\n  if (decodedToken.exp * 1000 < Date.now()) {\n    localStorage.removeItem(\"jwtToken\");\n  } else {}\n}\n\nconst AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  login: userData => {},\n  logout: () => {}\n});\n\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case 'LOGIN':\n      return { ...state,\n        user: action.payload\n      };\n\n    case 'LOGOUT':\n      return { ...state,\n        user: null\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction AuthProvider(props) {\n  _s();\n\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  function login(userData) {\n    localStorage.setItem(\"jwtToken\", userData.token);\n    dispatch({\n      type: 'LOGIN',\n      payload: userData\n    });\n  }\n\n  function logout() {\n    localStorage.removeItem(\"jwtToken\");\n    dispatch({\n      type: 'LOGOUT'\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: state.user,\n      login,\n      logout\n    },\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/kylelong/corkedup/client/src/context/auth.js"],"names":["React","useReducer","createContext","jwtDecode","localStorage","getItem","decodedToken","exp","Date","now","removeItem","AuthContext","user","login","userData","logout","authReducer","state","action","type","payload","AuthProvider","props","dispatch","initialState","setItem","token"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,IAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAH,EAAoC;AAChC,QAAMC,YAAY,GAAGH,SAAS,CAACC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAD,CAA9B;;AAEA,MAAGC,YAAY,CAACC,GAAb,GAAmB,IAAnB,GAA0BC,IAAI,CAACC,GAAL,EAA7B,EAAwC;AACpCL,IAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB;AACH,GAFD,MAEO,CAEN;AACJ;;AAED,MAAMC,WAAW,gBAAGT,aAAa,CAAC;AAC9BU,EAAAA,IAAI,EAAE,IADwB;AAE9BC,EAAAA,KAAK,EAAGC,QAAD,IAAc,CAAE,CAFO;AAG9BC,EAAAA,MAAM,EAAE,MAAM,CAAE;AAHc,CAAD,CAAjC;;AAMA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAmC;AAC/B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,OAAL;AACI,aAAM,EACF,GAAGF,KADD;AAEFL,QAAAA,IAAI,EAAEM,MAAM,CAACE;AAFX,OAAN;;AAIJ,SAAK,QAAL;AACI,aAAM,EACF,GAAGH,KADD;AAEFL,QAAAA,IAAI,EAAE;AAFJ,OAAN;;AAIJ;AACI,aAAOK,KAAP;AAZR;AAcH;;AAED,SAASI,YAAT,CAAsBC,KAAtB,EAA4B;AAAA;;AACxB,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBtB,UAAU,CAACe,WAAD,EAAcQ,YAAd,CAApC;;AAEA,WAASX,KAAT,CAAeC,QAAf,EAAyB;AACrBV,IAAAA,YAAY,CAACqB,OAAb,CAAqB,UAArB,EAAiCX,QAAQ,CAACY,KAA1C;AACAH,IAAAA,QAAQ,CAAC;AACLJ,MAAAA,IAAI,EAAE,OADD;AAELC,MAAAA,OAAO,EAAEN;AAFJ,KAAD,CAAR;AAIH;;AAED,WAASC,MAAT,GAAiB;AACbX,IAAAA,YAAY,CAACM,UAAb,CAAwB,UAAxB;AACAa,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACH;;AACD,sBACI,QAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AAAEP,MAAAA,IAAI,EAAEK,KAAK,CAACL,IAAd;AAAoBC,MAAAA,KAApB;AAA2BE,MAAAA;AAA3B,KADX;AAAA,OAEQO;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAtBQD,Y;;KAAAA,Y;AAuBT,SAASV,WAAT,EAAsBU,YAAtB","sourcesContent":["import React, { useReducer, createContext } from 'react';\nimport jwtDecode from 'jwt-decode';\n\nif(localStorage.getItem(\"jwtToken\")){\n    const decodedToken = jwtDecode(localStorage.getItem(\"jwtToken\"));\n\n    if(decodedToken.exp * 1000 < Date.now()){\n        localStorage.removeItem(\"jwtToken\");\n    } else {\n\n    }\n}\n\nconst AuthContext = createContext({\n    user: null,\n    login: (userData) => {},\n    logout: () => {}\n})\n\nfunction authReducer(state, action){\n    switch(action.type){\n        case 'LOGIN':\n            return{\n                ...state,\n                user: action.payload\n            }\n        case 'LOGOUT':\n            return{\n                ...state,\n                user: null\n            }\n        default:\n            return state;\n    }\n}\n\nfunction AuthProvider(props){\n    const [state, dispatch] = useReducer(authReducer, initialState);\n\n    function login(userData) {\n        localStorage.setItem(\"jwtToken\", userData.token);\n        dispatch({\n            type: 'LOGIN',\n            payload: userData\n        })\n    }\n\n    function logout(){\n        localStorage.removeItem(\"jwtToken\");\n        dispatch({ type: 'LOGOUT' })\n    }\n    return (\n        <AuthContext.Provider\n            value={{ user: state.user, login, logout}}\n            {...props}\n            />\n\n    )\n}\nexport { AuthContext, AuthProvider }"]},"metadata":{},"sourceType":"module"}