{"ast":null,"code":"var _jsxFileName = \"/Users/kylelong/corkedup/client/src/components/landing_page/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Link, useHistory } from \"react-router-dom\";\nimport gql from 'graphql-tag';\nimport { useMutation } from \"@apollo/client\";\nimport { AuthContext } from '../../context/auth';\nimport { useForm } from '../../util/hooks';\n/*\nTODO: Login for email and password.\n Make sure it matches from db before redirecting to profile\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  }\n}));\nexport default function LoginForm(props) {\n  _s();\n\n  const context = useContext(AuthContext);\n  const classes = useStyles();\n  const [errors, setErrors] = useState({});\n  const history = useHistory();\n  const {\n    onChange,\n    onSubmit,\n    values\n  } = useForm(loginUserCallback, {\n    email: '',\n    password: ''\n  });\n  const [loginUser, {\n    loading\n  }] = useMutation(LOGIN_USER, {\n    update(_, {\n      data: {\n        login: userData\n      }\n    }) {\n      context.login(userData);\n      history.push('/bars');\n    },\n\n    onError({\n      graphQLErrors,\n      networkError\n    }) {\n      if (graphQLErrors) {\n        setErrors(graphQLErrors[0].extensions.errors);\n      }\n    },\n\n    variables: values\n  });\n\n  function loginUserCallback() {\n    loginUser();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    id: \"loginForm\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-basic\",\n      label: \"Email\",\n      variant: \"outlined\",\n      name: \"email\",\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), errors.hasOwnProperty(\"email\") && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-basic\",\n      label: \"Password\",\n      variant: \"outlined\",\n      type: \"password\",\n      name: \"password\",\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), errors.hasOwnProperty(\"password\") && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button is-info is-light is-medium is-fullwidth\",\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), errors.hasOwnProperty(\"general\") && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error\",\n      children: errors.general\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/signup\",\n      children: \"Don't have an account? Sign up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"BmF0mJ9M1A6b8/jqSUZr+CGmduI=\", false, function () {\n  return [useStyles, useHistory, useForm, useMutation];\n});\n\n_c = LoginForm;\nconst LOGIN_USER = gql`\n  mutation login($email: String!,$password: String!) {\n    login (\n        email: $email,\n        password: $password  \n    ){\n      id email token firstName lastName createdAt\n    }\n  }\n`;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/kylelong/corkedup/client/src/components/landing_page/LoginForm.js"],"names":["React","useState","useContext","makeStyles","TextField","Link","useHistory","gql","useMutation","AuthContext","useForm","useStyles","theme","root","margin","spacing","width","LoginForm","props","context","classes","errors","setErrors","history","onChange","onSubmit","values","loginUserCallback","email","password","loginUser","loading","LOGIN_USER","update","_","data","login","userData","push","onError","graphQLErrors","networkError","extensions","variables","hasOwnProperty","general"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport gql from 'graphql-tag';\nimport { useMutation } from \"@apollo/client\";\nimport { AuthContext } from '../../context/auth';\nimport { useForm } from '../../util/hooks';\n/*\nTODO: Login for email and password.\n Make sure it matches from db before redirecting to profile\n*/\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nexport default function LoginForm(props) {\n  const context = useContext(AuthContext);\n  const classes = useStyles();\n  const [errors, setErrors] = useState({})\n  const history = useHistory();\n\n  const {onChange, onSubmit, values } = useForm(loginUserCallback, {\n    email: '',\n    password: ''\n})\n\n\nconst [loginUser, { loading }] = useMutation(LOGIN_USER, {\n  update(_, \n    { \n      data: {login: userData}}) {\n\n    context.login(userData)\n    history.push('/bars');\n  },\n  onError({ graphQLErrors, networkError}){\n    if(graphQLErrors){\n      setErrors(graphQLErrors[0].extensions.errors);\n    }\n\n  },\n  variables: values\n});\n\nfunction loginUserCallback() {\n  loginUser();\n}\n\n  return (\n\n    <form onSubmit={onSubmit} className={classes.root} noValidate autoComplete=\"off\" id=\"loginForm\">\n      <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\" name=\"email\" onChange={onChange} />\n      {   errors.hasOwnProperty(\"email\") &&\n          <p className=\"error\">{errors.email}</p>\n       }\n      <TextField id=\"outlined-basic\" label=\"Password\" variant=\"outlined\" type=\"password\" name=\"password\" onChange={onChange} />\n      {   errors.hasOwnProperty(\"password\") &&\n          <p className=\"error\">{errors.password}</p>\n       }\n\n        <div className=\"buttons\">\n          <button className=\"button is-info is-light is-medium is-fullwidth\" type=\"submit\">Login</button>\n        </div>\n\n        {   errors.hasOwnProperty(\"general\") &&\n          <span className=\"error\">{errors.general}</span>\n       }\n\n        <Link to=\"/signup\">Don't have an account? Sign up</Link>\n\n    </form>\n\n  );\n}\n\nconst LOGIN_USER = gql`\n  mutation login($email: String!,$password: String!) {\n    login (\n        email: $email,\n        password: $password  \n    ){\n      id email token firstName lastName createdAt\n    }\n  }\n`;"]},"metadata":{},"sourceType":"module"}