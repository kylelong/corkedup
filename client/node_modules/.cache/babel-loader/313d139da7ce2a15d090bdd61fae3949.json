{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar utils_1 = require(\"../base/utils\");\n\nvar BasicsClient =\n/** @class */\nfunction () {\n  function BasicsClient(transport) {\n    if (!transport) {\n      throw Error('Transport class needs to be provided.');\n    }\n\n    this.transport = transport;\n  }\n  /**\n   * Allows a Consumer application to use an OAuth request_token to request user authorization.  This method is a replacement of Section 6.2 of the OAuth 1.0 authentication flow for applications  using the callback authentication flow. The method will use the currently logged in user as the account  for access authorization unless the force_login parameter is set to true.This method differs from  GET oauth / authorize in that if the user has already granted the application permission,  the redirect will occur without the user having to re-approve the application.  To realize this behavior, you must enable the Use Sign in with Twitter setting on your application record.\n   *\n   * @link https://developer.twitter.com/en/docs/basics/authentication/api-reference/authenticate\n   * @param parameters\n   */\n\n\n  BasicsClient.prototype.oauthAuthenticate = function (parameters) {\n    return __awaiter(this, void 0, void 0, function () {\n      var params;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            params = utils_1.createParams(parameters);\n            return [4\n            /*yield*/\n            , this.transport.doGetRequest('https://api.twitter.com/oauth/authenticate' + params)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * Allows a Consumer application to use an OAuth Request Token to request user authorization.  This method fulfills Section 6.2 of the OAuth 1.0 authentication flow.  Desktop applications must use this method (and cannot use GET oauth / authenticate). Usage Note: An oauth_callback is never sent to this method, provide it to POST oauth / request_token instead.\n   *\n   * @link https://developer.twitter.com/en/docs/basics/authentication/api-reference/authorize\n   * @param parameters\n   */\n\n\n  BasicsClient.prototype.oauthAuthorize = function (parameters) {\n    return __awaiter(this, void 0, void 0, function () {\n      var params;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            params = utils_1.createParams(parameters);\n            return [4\n            /*yield*/\n            , this.transport.doGetRequest('https://api.twitter.com/oauth/authorize' + params)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * Allows a Consumer application to exchange the OAuth Request Token for an OAuth Access Token. This method fulfills Section 6.3 of the OAuth 1.0 authentication flow.\n   *\n   * @link https://developer.twitter.com/en/docs/basics/authentication/api-reference/access_token\n   * @param parameters\n   */\n\n\n  BasicsClient.prototype.oauthAccessToken = function (parameters) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.transport.doPostRequest('https://api.twitter.com/oauth/access_token', parameters)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * Allows a registered application to revoke an issued OAuth access_token  by presenting its client credentials. Once an access_token has been invalidated,  new creation attempts will yield a different Access Token and usage of  the invalidated token will no longer be allowed.\n   *\n   * @link https://developer.twitter.com/en/docs/basics/authentication/api-reference/invalidate_access_token\n   * @param parameters\n   */\n\n\n  BasicsClient.prototype.oauthInvalidateToken = function (parameters) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.transport.doPostRequest('https://api.twitter.com/1.1/oauth/invalidate_token', parameters)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * Allows a registered application to revoke an issued oAuth 2.0 Bearer Token by presenting  its client credentials. Once a Bearer Token has been invalidated, new creation  attempts will yield a different Bearer Token and usage of the invalidated  token will no longer be allowed.Successful responses include a  JSON-structure describing the revoked Bearer Token.\n   *\n   * @link https://developer.twitter.com/en/docs/basics/authentication/api-reference/invalidate_bearer_token\n   * @param parameters\n   */\n\n\n  BasicsClient.prototype.oauth2InvalidateToken = function (parameters) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.transport.doPostRequest('https://api.twitter.com/oauth2/invalidate_token', parameters)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * Allows a Consumer application to obtain an OAuth Request Token to request user authorization.  This method fulfills Section 6.1 of the OAuth 1.0 authentication flow.\n   *\n   * @link https://developer.twitter.com/en/docs/basics/authentication/api-reference/request_token\n   * @param parameters\n   */\n\n\n  BasicsClient.prototype.oauthRequestToken = function (parameters) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.transport.doPostRequest('https://api.twitter.com/oauth/request_token', parameters)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * Allows a registered application to obtain an OAuth 2 Bearer Token,  which can be used to make API requests on an application's own behalf,  without a user context. This is called Application-only authentication. A Bearer Token may be invalidated using oauth2/invalidate_token.  Once a Bearer Token has been invalidated, new creation attempts will yield a different Bearer Token and  usage of the previous token will no longer be allowed. Only one bearer token may exist outstanding for an application, and repeated requests to this method  will yield the same already-existent token until it has been invalidated. Successful responses include a JSON-structure describing the awarded Bearer Token. Tokens received by this method should be cached.  If attempted too frequently, requests will be rejected with a HTTP 403 with code 99.\n   *\n   * @link https://developer.twitter.com/en/docs/basics/authentication/api-reference/token\n   * @param parameters\n   */\n\n\n  BasicsClient.prototype.oauth2Token = function (parameters) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.transport.doPostRequest('https://api.twitter.com/oauth2/token', parameters)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  return BasicsClient;\n}();\n\nexports.default = BasicsClient;","map":{"version":3,"sources":["/Users/kylelong/corkedup/node_modules/twitter-api-client/dist/clients/BasicsClient.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","Object","defineProperty","exports","utils_1","require","BasicsClient","transport","Error","prototype","oauthAuthenticate","parameters","params","_a","createParams","doGetRequest","oauthAuthorize","oauthAccessToken","doPostRequest","oauthInvalidateToken","oauth2InvalidateToken","oauthRequestToken","oauth2Token","default"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../base/utils\");\nvar BasicsClient = /** @class */ (function () {\n    function BasicsClient(transport) {\n        if (!transport) {\n            throw Error('Transport class needs to be provided.');\n        }\n        this.transport = transport;\n    }\n    /**\n     * Allows a Consumer application to use an OAuth request_token to request user authorization.  This method is a replacement of Section 6.2 of the OAuth 1.0 authentication flow for applications  using the callback authentication flow. The method will use the currently logged in user as the account  for access authorization unless the force_login parameter is set to true.This method differs from  GET oauth / authorize in that if the user has already granted the application permission,  the redirect will occur without the user having to re-approve the application.  To realize this behavior, you must enable the Use Sign in with Twitter setting on your application record.\n     *\n     * @link https://developer.twitter.com/en/docs/basics/authentication/api-reference/authenticate\n     * @param parameters\n     */\n    BasicsClient.prototype.oauthAuthenticate = function (parameters) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        params = utils_1.createParams(parameters);\n                        return [4 /*yield*/, this.transport.doGetRequest('https://api.twitter.com/oauth/authenticate' + params)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Allows a Consumer application to use an OAuth Request Token to request user authorization.  This method fulfills Section 6.2 of the OAuth 1.0 authentication flow.  Desktop applications must use this method (and cannot use GET oauth / authenticate). Usage Note: An oauth_callback is never sent to this method, provide it to POST oauth / request_token instead.\n     *\n     * @link https://developer.twitter.com/en/docs/basics/authentication/api-reference/authorize\n     * @param parameters\n     */\n    BasicsClient.prototype.oauthAuthorize = function (parameters) {\n        return __awaiter(this, void 0, void 0, function () {\n            var params;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        params = utils_1.createParams(parameters);\n                        return [4 /*yield*/, this.transport.doGetRequest('https://api.twitter.com/oauth/authorize' + params)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Allows a Consumer application to exchange the OAuth Request Token for an OAuth Access Token. This method fulfills Section 6.3 of the OAuth 1.0 authentication flow.\n     *\n     * @link https://developer.twitter.com/en/docs/basics/authentication/api-reference/access_token\n     * @param parameters\n     */\n    BasicsClient.prototype.oauthAccessToken = function (parameters) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.transport.doPostRequest('https://api.twitter.com/oauth/access_token', parameters)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Allows a registered application to revoke an issued OAuth access_token  by presenting its client credentials. Once an access_token has been invalidated,  new creation attempts will yield a different Access Token and usage of  the invalidated token will no longer be allowed.\n     *\n     * @link https://developer.twitter.com/en/docs/basics/authentication/api-reference/invalidate_access_token\n     * @param parameters\n     */\n    BasicsClient.prototype.oauthInvalidateToken = function (parameters) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.transport.doPostRequest('https://api.twitter.com/1.1/oauth/invalidate_token', parameters)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Allows a registered application to revoke an issued oAuth 2.0 Bearer Token by presenting  its client credentials. Once a Bearer Token has been invalidated, new creation  attempts will yield a different Bearer Token and usage of the invalidated  token will no longer be allowed.Successful responses include a  JSON-structure describing the revoked Bearer Token.\n     *\n     * @link https://developer.twitter.com/en/docs/basics/authentication/api-reference/invalidate_bearer_token\n     * @param parameters\n     */\n    BasicsClient.prototype.oauth2InvalidateToken = function (parameters) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.transport.doPostRequest('https://api.twitter.com/oauth2/invalidate_token', parameters)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Allows a Consumer application to obtain an OAuth Request Token to request user authorization.  This method fulfills Section 6.1 of the OAuth 1.0 authentication flow.\n     *\n     * @link https://developer.twitter.com/en/docs/basics/authentication/api-reference/request_token\n     * @param parameters\n     */\n    BasicsClient.prototype.oauthRequestToken = function (parameters) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.transport.doPostRequest('https://api.twitter.com/oauth/request_token', parameters)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Allows a registered application to obtain an OAuth 2 Bearer Token,  which can be used to make API requests on an application's own behalf,  without a user context. This is called Application-only authentication. A Bearer Token may be invalidated using oauth2/invalidate_token.  Once a Bearer Token has been invalidated, new creation attempts will yield a different Bearer Token and  usage of the previous token will no longer be allowed. Only one bearer token may exist outstanding for an application, and repeated requests to this method  will yield the same already-existent token until it has been invalidated. Successful responses include a JSON-structure describing the awarded Bearer Token. Tokens received by this method should be cached.  If attempted too frequently, requests will be rejected with a HTTP 403 with code 99.\n     *\n     * @link https://developer.twitter.com/en/docs/basics/authentication/api-reference/token\n     * @param parameters\n     */\n    BasicsClient.prototype.oauth2Token = function (parameters) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.transport.doPostRequest('https://api.twitter.com/oauth2/token', parameters)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    return BasicsClient;\n}());\nexports.default = BasicsClient;\n"]},"metadata":{},"sourceType":"script"}