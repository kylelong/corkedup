{"ast":null,"code":"var _jsxFileName = \"/Users/kylelong/corkedup/src/components/events/Events.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport EventsHeader from './EventsHeader';\nimport Navigation from '../Navigation';\nimport SideMenu from '../SideMenu';\nimport { response } from 'express';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Events = () => {\n  _s();\n\n  // test with zipCode -> cleanUrls with urls array -> promise array with promises containing clean urls\n  const [zipCode, setZipCode] = useState(\"94109\");\n  const [urlData, setUrlData] = useState([]);\n  const [cleanUrls, setCleanUrls] = useState([]); // add async await\n\n  useEffect(() => {\n    axios.get(\"/test\", {\n      params: {\n        zipCode: zipCode\n      }\n    }).then(response => {\n      setUrlData(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []); //#endregion\n\n  const cleanUrl = async url => {\n    const response = await axios.get(\"/cleanUrl\", {\n      params: {\n        url: url\n      }\n    });\n    const data = await response.data;\n    return data;\n  }; //#endregion\n\n\n  useEffect(() => {\n    for (const url of urlData) {\n      // console.log(cleanUrl(url));\n      let data = cleanUrl(url);\n\n      if (data !== null) {\n        data.then(response => {\n          console.log(response);\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    }\n  }, [urlData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EventsHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: cleanUrls.map((url, i) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: url\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Events, \"7nV3TlLN5S69lwKFzW54kpo8EE0=\");\n\n_c = Events;\nexport default Events;\n\nvar _c;\n\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"sources":["/Users/kylelong/corkedup/src/components/events/Events.js"],"names":["React","useEffect","useState","axios","EventsHeader","Navigation","SideMenu","response","Events","zipCode","setZipCode","urlData","setUrlData","cleanUrls","setCleanUrls","get","params","then","data","catch","error","console","log","cleanUrl","url","err","map","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,QAAT,QAAyB,SAAzB;;;AACA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,OAAD,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C,CAJiB,CAKrB;;AACID,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACY,GAAN,CAAU,OAAV,EAAmB;AAACC,MAAAA,MAAM,EAAE;AAAEP,QAAAA,OAAO,EAAEA;AAAX;AAAT,KAAnB,EACCQ,IADD,CACOV,QAAD,IAAc;AAChBK,MAAAA,UAAU,CAACL,QAAQ,CAACW,IAAV,CAAV;AACH,KAHD,EAICC,KAJD,CAIQC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAND;AASH,GAVQ,EAUN,EAVM,CAAT,CANiB,CAiBjB;;AACA,QAAMG,QAAQ,GAAG,MAAOC,GAAP,IAAe;AAC5B,UAAMjB,QAAQ,GAAG,MAAOJ,KAAK,CAACY,GAAN,CAAU,WAAV,EAAuB;AAACC,MAAAA,MAAM,EAAE;AAAEQ,QAAAA,GAAG,EAAEA;AAAP;AAAT,KAAvB,CAAxB;AACA,UAAMN,IAAI,GAAG,MAAMX,QAAQ,CAACW,IAA5B;AACA,WAAOA,IAAP;AAEH,GALD,CAlBiB,CAwBjB;;;AACAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,SAAI,MAAMuB,GAAV,IAAiBb,OAAjB,EAAyB;AAErB;AACA,UAAIO,IAAI,GAAGK,QAAQ,CAACC,GAAD,CAAnB;;AACA,UAAGN,IAAI,KAAK,IAAZ,EAAiB;AACbA,QAAAA,IAAI,CAACD,IAAL,CAAWV,QAAD,IAAc;AACpBc,UAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ;AACH,SAFD,EAEGY,KAFH,CAESM,GAAG,IAAI;AACZJ,UAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACH,SAJD;AAKH;AAEJ;AAGJ,GAhBQ,EAgBN,CAACd,OAAD,CAhBM,CAAT;AAmBA,sBACI;AAAA,4BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,gBAGIE,SAAS,CAACa,GAAV,CAAc,CAACF,GAAD,EAAMG,CAAN,KAAY;AACtB,4BACI;AAAA,oBAAYH;AAAZ,WAAQG,CAAR;AAAA;AAAA;AAAA;AAAA,gBADJ;AAGH,OAJD;AAHJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA9DD;;GAAMnB,M;;KAAAA,M;AAgEN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport EventsHeader from './EventsHeader';\nimport Navigation from '../Navigation';\nimport SideMenu from '../SideMenu';\nimport { response } from 'express';\nconst Events = () => {\n    // test with zipCode -> cleanUrls with urls array -> promise array with promises containing clean urls\n    const [zipCode, setZipCode] = useState(\"94109\")\n    const [urlData, setUrlData] = useState([]);\n    const [cleanUrls, setCleanUrls] = useState([]);\n// add async await\n    useEffect(() => {\n        axios.get(\"/test\", {params: { zipCode: zipCode} })\n        .then((response) => {\n            setUrlData(response.data)\n        })\n        .catch((error) => {\n            console.log(error);\n        })\n\n\n    }, [])\n    //#endregion\n    const cleanUrl = async (url) => {\n        const response = await  axios.get(\"/cleanUrl\", {params: { url: url } });\n        const data = await response.data;\n        return data;\n\n    }\n    //#endregion\n    useEffect(() => {\n        for(const url of urlData){\n\n            // console.log(cleanUrl(url));\n            let data = cleanUrl(url);\n            if(data !== null){\n                data.then((response) => {\n                    console.log(response);\n                }).catch(err => {\n                    console.log(err);\n                })\n            }\n\n        }\n\n\n    }, [urlData])\n\n\n    return (\n        <div>\n            <Navigation />\n            <EventsHeader />\n            <SideMenu />\n            <div>\n                { \n\n                cleanUrls.map((url, i) => {\n                    return (\n                        <p key={i}>{url}</p>\n                    )\n                })\n\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default Events;"]},"metadata":{},"sourceType":"module"}