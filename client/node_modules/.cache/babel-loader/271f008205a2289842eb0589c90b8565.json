{"ast":null,"code":"var _jsxFileName = \"/Users/kylelong/corkedup/src/components/events/Events.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport EventsHeader from './EventsHeader';\nimport Navigation from '../Navigation';\nimport SideMenu from '../SideMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Events = () => {\n  _s();\n\n  // test with zipCode -> cleanUrls with urls array -> promise array with promises containing clean urls\n  const [zipCode, setZipCode] = useState(\"94109\");\n  const [urlData, setUrlData] = useState([]);\n  const [cleanUrls, setCleanUrls] = useState([]); // add async await\n\n  useEffect(() => {\n    axios.get(\"/test\", {\n      params: {\n        zipCode: zipCode\n      }\n    }).then(response => {\n      setUrlData(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []); //#endregion\n\n  const cleanUrl = async url => {\n    const response = await axios.get(\"/cleanUrl\", {\n      params: {\n        url: url\n      }\n    });\n    const data = await response.data;\n    return data; // axios.get(\"/cleanUrl\", {params: { url: url } })\n    // .then((response) => {\n    //     console.log(response.data)\n    // })\n    // .catch((error) => {\n    //     console.log(error);\n    // })\n  }; //#endregion\n\n\n  useEffect(() => {\n    let urls = [];\n\n    for (const url of urlData) {\n      let data = cleanUrl(url);\n\n      if (data != null) {\n        let clean_url = cleanUrl(url);\n        urls.push(clean_url);\n      }\n    }\n\n    Promise.all(urls).then(response => {\n      console.log(response);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [urlData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EventsHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Events, \"7nV3TlLN5S69lwKFzW54kpo8EE0=\");\n\n_c = Events;\nexport default Events;\n\nvar _c;\n\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"sources":["/Users/kylelong/corkedup/src/components/events/Events.js"],"names":["React","useEffect","useState","axios","EventsHeader","Navigation","SideMenu","Events","zipCode","setZipCode","urlData","setUrlData","cleanUrls","setCleanUrls","get","params","then","response","data","catch","error","console","log","cleanUrl","url","urls","clean_url","push","Promise","all","err"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,QAAP,MAAqB,aAArB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,OAAD,CAAtC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C,CAJiB,CAKrB;;AACID,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACW,GAAN,CAAU,OAAV,EAAmB;AAACC,MAAAA,MAAM,EAAE;AAAEP,QAAAA,OAAO,EAAEA;AAAX;AAAT,KAAnB,EACCQ,IADD,CACOC,QAAD,IAAc;AAChBN,MAAAA,UAAU,CAACM,QAAQ,CAACC,IAAV,CAAV;AACH,KAHD,EAICC,KAJD,CAIQC,KAAD,IAAW;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAND;AASH,GAVQ,EAUN,EAVM,CAAT,CANiB,CAiBjB;;AACA,QAAMG,QAAQ,GAAG,MAAOC,GAAP,IAAe;AAC5B,UAAMP,QAAQ,GAAG,MAAOd,KAAK,CAACW,GAAN,CAAU,WAAV,EAAuB;AAACC,MAAAA,MAAM,EAAE;AAAES,QAAAA,GAAG,EAAEA;AAAP;AAAT,KAAvB,CAAxB;AACA,UAAMN,IAAI,GAAG,MAAMD,QAAQ,CAACC,IAA5B;AACA,WAAOA,IAAP,CAH4B,CAK5B;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,GAbD,CAlBiB,CAgCjB;;;AACAjB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIwB,IAAI,GAAG,EAAX;;AACA,SAAI,MAAMD,GAAV,IAAiBd,OAAjB,EAAyB;AACrB,UAAIQ,IAAI,GAAGK,QAAQ,CAACC,GAAD,CAAnB;;AACA,UAAGN,IAAI,IAAI,IAAX,EAAgB;AACZ,YAAIQ,SAAS,GAAGH,QAAQ,CAACC,GAAD,CAAxB;AACAC,QAAAA,IAAI,CAACE,IAAL,CAAUD,SAAV;AACH;AAEJ;;AAEDE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAAkBT,IAAlB,CAAwBC,QAAD,IAAc;AAClCI,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACF,KAFD,EAEGE,KAFH,CAESW,GAAG,IAAI;AACZT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACH,KAJD;AAOH,GAlBQ,EAkBN,CAACpB,OAAD,CAlBM,CAAT;AAqBA,sBACI;AAAA,4BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAxED;;GAAMH,M;;KAAAA,M;AA0EN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport EventsHeader from './EventsHeader';\nimport Navigation from '../Navigation';\nimport SideMenu from '../SideMenu';\n\nconst Events = () => {\n    // test with zipCode -> cleanUrls with urls array -> promise array with promises containing clean urls\n    const [zipCode, setZipCode] = useState(\"94109\")\n    const [urlData, setUrlData] = useState([]);\n    const [cleanUrls, setCleanUrls] = useState([]);\n// add async await\n    useEffect(() => {\n        axios.get(\"/test\", {params: { zipCode: zipCode} })\n        .then((response) => {\n            setUrlData(response.data)\n        })\n        .catch((error) => {\n            console.log(error);\n        })\n\n\n    }, [])\n    //#endregion\n    const cleanUrl = async (url) => {\n        const response = await  axios.get(\"/cleanUrl\", {params: { url: url } });\n        const data = await response.data;\n        return data;\n\n        // axios.get(\"/cleanUrl\", {params: { url: url } })\n        // .then((response) => {\n        //     console.log(response.data)\n        // })\n        // .catch((error) => {\n        //     console.log(error);\n        // })\n\n    }\n    //#endregion\n    useEffect(() => {\n        let urls = []\n        for(const url of urlData){\n            let data = cleanUrl(url);\n            if(data != null){\n                let clean_url = cleanUrl(url);\n                urls.push(clean_url);\n            }\n            \n        }\n\n        Promise.all(urls).then((response) => {\n           console.log(response);\n        }).catch(err => {\n            console.log(err);\n        })\n\n\n    }, [urlData])\n\n\n    return (\n        <div>\n            <Navigation />\n            <EventsHeader />\n            <SideMenu />\n            <div>\n                {/* { \n\n                cleanUrls.map((url, i) => {\n                    return (\n                        <p key={i}>{url}</p>\n                    )\n                })\n\n                } */}\n            </div>\n        </div>\n    );\n};\n\nexport default Events;"]},"metadata":{},"sourceType":"module"}