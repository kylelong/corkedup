{"ast":null,"code":"var _jsxFileName = \"/Users/kylelong/corkedup/client/src/util/AuthRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from '../context/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AuthRoute({\n  component: Component,\n  ...rest\n}) {\n  _s();\n\n  const {\n    user\n  } = useContext(AuthContext);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => user ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 45\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthRoute, \"y3FQDew7UyrSqYkvQcTdCsLbAB8=\");\n\n_c = AuthRoute;\nexport default AuthRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthRoute\");","map":{"version":3,"sources":["/Users/kylelong/corkedup/client/src/util/AuthRoute.js"],"names":["React","useContext","Route","Redirect","AuthContext","AuthRoute","component","Component","rest","user","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,SAASC,WAAT,QAA4B,iBAA5B;;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAnB,EAAqD;AAAA;;AACjD,QAAM;AAAEC,IAAAA;AAAF,MAAWR,UAAU,CAACG,WAAD,CAA3B;AAEA,sBACI,QAAC,KAAD,OACQI,IADR;AAEI,IAAA,MAAM,EAAEE,KAAK,IACTD,IAAI,gBAAG,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAwB,QAAC,SAAD,OAAeC;AAAf;AAAA;AAAA;AAAA;AAAA;AAHpC;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAXQL,S;;KAAAA,S;AAaT,eAAeA,SAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { AuthContext } from '../context/auth';\n\nfunction AuthRoute({ component: Component, ...rest }){\n    const { user } = useContext(AuthContext);\n\n    return (\n        <Route \n            {...rest}\n            render={props =>\n                user ? <Redirect to=\"/\"/> : <Component {...props}/>\n            }\n        />\n    )\n}\n\nexport default AuthRoute;"]},"metadata":{},"sourceType":"module"}